apiVersion: apps/v1
kind: Deployment
metadata:
  name: face-recognition-app
  labels:
    app: face-recognition-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: face-recognition-app
  template:
    metadata:
      labels:
        app: face-recognition-app
    spec:
      containers:
      - name: face-recognition-app
        image: ghcr.io/ayushkumar912/lightweight-face-recognition:latest
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_ENV
          value: "production"
        - name: PYTHONUNBUFFERED
          value: "1"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: known-faces-storage
          mountPath: /app/backend/known_faces
        - name: attendance-storage
          mountPath: /app/api/attendance_data
      volumes:
      - name: known-faces-storage
        persistentVolumeClaim:
          claimName: known-faces-pvc
      - name: attendance-storage
        persistentVolumeClaim:
          claimName: attendance-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: face-recognition-service
spec:
  selector:
    app: face-recognition-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: known-faces-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: attendance-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: face-recognition-ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - your-domain.com
    secretName: face-recognition-tls
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: face-recognition-service
            port:
              number: 80
